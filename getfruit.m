function Fruits = getfruits()
    imds = imageDatastore('fruits-360\Training', 'IncludeSubfolders',true, 'LabelSource','foldernames');
    [imdsTrain, ~] = splitEachLabel(imds,0.005,"randomized");

    net = alexnet;
    inputSize = net.Layers(1).InputSize;
    layersTransfer = net.Layers(1:end-3);
    numClasses = numel(categories(imdsTrain.Labels));
    layers = [
        layersTransfer
        fullyConnectedLayer(numClasses,'WeightLearnRateFactor',20,'BiasLearnRateFactor',20)
        softmaxLayer
        classificationLayer];

    pixelRange = [-30 30];
    imageAugmenter = imageDataAugmenter( ...
        'RandXReflection',true, ...
        'RandXTranslation',pixelRange, ...
        'RandYTranslation',pixelRange);
    augimdsTrain = augmentedImageDatastore(inputSize(1:2),imdsTrain, ...
        'DataAugmentation',imageAugmenter);

    options1 = trainingOptions('sgdm', ...
        'MiniBatchSize',10, ...
        'MaxEpochs',6, ...
        'InitialLearnRate',5e-4, ...
        'Shuffle','every-epoch', ...
        'ValidationFrequency',3, ...
        'Verbose',false, ...
        'Plots','training-progress');

    options2 = trainingOptions('sgdm', ...
        'LearnRateSchedule','piecewise', ...
        'LearnRateDropFactor',0.2, ...
        'LearnRateDropPeriod',5, ...
        'MaxEpochs',20, ...
        'MiniBatchSize',64, ...
        'Verbose',false, ...
        'Plots','training-progress')

    netTransfer = trainNetwork(augimdsTrain,layers,options2);

    reseau1 = netTransfert;
    save reseau1;
end
